// @flow

import { take, takeEvery, put, call } from 'redux-saga/effects';

import * as actionCreators from './action-creators';
import * as requests from './requests';

export default function* <%= lowerModuleName %>Saga(dispatch: Function): Generator<any, any, any> {

}

/*
  Example:

  export default function* currentOrderSaga(dispatch) {
    yield takeEvery('CREATE_LINE_ITEM_START', createLineItemSaga);
  }

  function* createLineItemSaga(action) {
    const { variantId, quantity } = action;

    try {
      const response = yield call(requests.createLineItem, { variantId, quantity });

      yield put(actionCreators.createLineItemSuccess(response));
    }
    catch(error) {
      yield put(actionCreators.createLineItemError(error));
    }
  }
*/

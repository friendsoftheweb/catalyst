#!/usr/bin/env node

const path = require('path');
const fs = require('fs');
const { execSync } = require('child_process');
const glob = require('glob');
const ejs = require('ejs');
const mkdirp = require('mkdirp');

const inputDir = path.resolve(__dirname, '../src/dev-client/templates');
const outputDir = path.resolve(__dirname, '../lib/dev-client/templates');

execSync('rm -rf lib');

mkdirp.sync(outputDir);

const srcPaths = glob.sync('src/**/*');

for (const srcPath of srcPaths) {
  const destPath = srcPath.replace(/^src/, 'lib');
  const destPathDir = path.parse(destPath).dir;

  mkdirp.sync(destPathDir);

  fs.copyFileSync(srcPath, destPath);
}

fs.readdirSync(inputDir).forEach(file => {
  const templateText = fs.readFileSync(path.join(inputDir, file)).toString();

  const templateFunctionText =
    ejs.compile(templateText, { client: true, _with: false }).toString() +
    '\n\nexport default anonymous;';

  fs.writeFileSync(
    path.join(outputDir, file.replace(/\.ejs$/, '.js')),
    templateFunctionText
  );
});
